{
  "address": "0xe3275239BB2178909A3bc675389Db329b4200DAA",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "notOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xad76f92fc61a6546747683f1da33c7f397fcf41ccc91d773e716acdd4a9182ab",
  "receipt": {
    "to": null,
    "from": "0x0f7d8B0eb50D960BFcEb5242aeDaA1A81239f4e1",
    "contractAddress": "0xe3275239BB2178909A3bc675389Db329b4200DAA",
    "transactionIndex": 138,
    "gasUsed": "768250",
    "logsBloom": "0x
    "blockHash": "0x19aafc4dea7bbd24ca6421d10f396d20c8a81d33ef2a13d501ed814d0094f71a",
    "transactionHash": "0xad76f92fc61a6546747683f1da33c7f397fcf41ccc91d773e716acdd4a9182ab",
    "logs": [],
    "blockNumber": 5306550,
    "cumulativeGasUsed": "15180628",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 3,
  "solcInputHash": "83105a93ba68e8ef0a4364c50f6631d7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"notOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity ^0.8.2;\\r\\n\\r\\n/**\\r\\n * @title SimpleStorage\\r\\n * @dev Store & retrieve value in a variable\\r\\n * @custom:dev-run-script ./scripts/deploy_with_ethers.ts\\r\\n */\\r\\n\\r\\n/*get funds from the user \\r\\nwithdraw them \\r\\nset a min funding value */\\r\\n\\r\\n\\r\\n//constants and immutable is used to bring the gas down\\r\\n\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nerror notOwner();\\r\\n\\r\\ncontract FundMe {\\r\\n    using PriceConverter for uint256;\\r\\n    uint256 public constant minUSD = 50 * 1e18;\\r\\n    mapping(address => uint256) addressToDonation;\\r\\n    address[] funders;\\r\\n    address public owner;\\r\\n    AggregatorV3Interface private priceFeedValue;\\r\\n    constructor(address priceFeed){\\r\\n        owner = msg.sender; //the person who deploys the contract will be the owner \\r\\n        priceFeedValue = AggregatorV3Interface(priceFeed);\\r\\n        //constructor is called whenver the contract is deployed\\r\\n        //same as other prog languages\\r\\n    }\\r\\n    function fund() public payable{\\r\\n        //we want to set m in usd amount\\r\\n        //smart contracts can hold funds just like our wallets\\r\\n        //use payable keyword to make it pay-able\\r\\n        //msg.sender is the value added by the person making transaction or adding fund, can only be done in payable function\\r\\n        //require keyword helps to maintain the condition\\r\\n        require(msg.value.getConversionRate(priceFeedValue) > minUSD,\\\"Did not send enough\\\");  //did not send enough is revert message\\r\\n        funders.push(msg.sender);\\r\\n        addressToDonation[msg.sender] += msg.value;\\r\\n\\r\\n    }\\r\\n\\r\\n    \\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n\\r\\n\\r\\n        //first loop through all funders and make their amount 0\\r\\n        for(uint256 index=0;index < funders.length;index++){\\r\\n            address funderAddress = funders[index];\\r\\n            addressToDonation[funderAddress] = 0;\\r\\n    }\\r\\n\\r\\n    //now reset the array\\r\\n\\r\\n    funders = new address[](0); // this is the way to reset the array\\r\\n\\r\\n    //now we will actually withdraw the funds   (sending eth from contract\\r\\n    //3 ways  transfer send and call\\r\\n    //transfer is simplest \\r\\n//    payable(msg.sender).transfer(address(this).balance);  //this refers to contract (this contract stores the value) & msg.sender is the person calling the withdraw function\\r\\n    //send helps to revert\\r\\n    //call is most recommended \\r\\n    (bool callSuccess,) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\r\\n    require(callSuccess,\\\"call failed\\\");\\r\\n\\r\\n\\r\\n    }\\r\\n    modifier onlyOwner {\\r\\n\\r\\n        //code below will be executed if i used onlyOwner modifier with my function\\r\\n        // require(msg.sender == owner,\\\"not the owner\\\"); //checking is sender is owner\\r\\n        //using custom errors makes code more gas efficient\\r\\n\\r\\n         if(msg.sender != owner) {revert notOwner(); }   \\r\\n\\r\\n        _; //rest of the code after above condition\\r\\n    }\\r\\n    //what happends if someone sends this contract ETH without calling fund\\r\\n    /* Upper thing can happen if we use fallback and recieve =>(special functions) this works at low level interaction  */\\r\\n    //recieve is triggered only when calldata portion is empty\\r\\n    //fallback function is called when we put a value in calldata that does not specify a function, so it will then call falbback function which is created without function keyword\\r\\n\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n     }\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n     }\\r\\n\\r\\n    }\",\"keccak256\":\"0xe2961c6a35683d97b7a45f9ebb77aec29bcc636badec247ad010703ef80364a6\",\"license\":\"GPL-3.0\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity ^0.8.2;\\r\\n\\r\\n/**\\r\\n * @title SimpleStorage\\r\\n * @dev Store & retrieve value in a variable\\r\\n * @custom:dev-run-script ./scripts/deploy_with_ethers.ts\\r\\n */\\r\\n\\r\\n//This is library\\r\\n/* Library is similar to contract but i can't have states and cannot send ether*/\\r\\n//SafeMath is one of the most common library but it was used in versions before 0.8 it is no loner used\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    \\r\\n     function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256){\\r\\n        // ABI and Address of datafeed contract are needed\\r\\n        //0x694AA1769357215DE4FAC081bf1f309aDC325306\\r\\n         (,int256 price ,,,) = priceFeed.latestRoundData();\\r\\n        return uint256(price * 1e10);\\r\\n      //eth in terms of usd\\r\\n    }\\r\\n\\r\\n    // function getVersion() internal view returns (uint256){\\r\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\r\\n    //     return priceFeed.version();\\r\\n    // }\\r\\n\\r\\n    function getConversionRate(uint256 ethAmount,AggregatorV3Interface priceFeed) internal view returns(uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) /1e18;\\r\\n        return ethAmountInUsd;\\r\\n\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x693587663ec2d48a0a005b09336b7eeecd13ee3d94d552a587cf689751d78600\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610d73380380610d738339818101604052810190610032919061011d565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b600060208284031215610133576101326100ba565b5b600061014184828501610108565b91505092915050565b610c1a806101596000396000f3fe6080604052600436106100435760003560e01c80633ccfd60b1461005c5780638da5cb5b14610073578063b60d42881461009e578063dc992aa0146100a857610052565b36610052576100506100d3565b005b61005a6100d3565b005b34801561006857600080fd5b5061007161020c565b005b34801561007f57600080fd5b5061008861044e565b6040516100959190610645565b60405180910390f35b6100a66100d3565b005b3480156100b457600080fd5b506100bd610474565b6040516100ca9190610679565b60405180910390f35b6802b5e3af16b1880000610112600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461048190919063ffffffff16565b11610152576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610149906106f1565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102039190610740565b92505081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610293576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561033e576000600182815481106102b9576102b8610796565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610336906107c5565b915050610296565b50600067ffffffffffffffff81111561035a5761035961080e565b5b6040519080825280602002602001820160405280156103885781602001602082028036833780820191505090505b506001908051906020019061039e92919061055d565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103c59061086e565b60006040518083038185875af1925050503d8060008114610402576040519150601f19603f3d011682016040523d82523d6000602084013e610407565b606091505b505090508061044b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610442906108cf565b60405180910390fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b60008061048d836104bd565b90506000670de0b6b3a764000085836104a691906108ef565b6104b09190610978565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561050657600080fd5b505afa15801561051a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053e9190610a52565b5050509150506402540be400816105559190610acd565b915050919050565b8280548282559060005260206000209081019282156105d6579160200282015b828111156105d55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061057d565b5b5090506105e391906105e7565b5090565b5b808211156106005760008160009055506001016105e8565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061062f82610604565b9050919050565b61063f81610624565b82525050565b600060208201905061065a6000830184610636565b92915050565b6000819050919050565b61067381610660565b82525050565b600060208201905061068e600083018461066a565b92915050565b600082825260208201905092915050565b7f446964206e6f742073656e6420656e6f75676800000000000000000000000000600082015250565b60006106db601383610694565b91506106e6826106a5565b602082019050919050565b6000602082019050818103600083015261070a816106ce565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061074b82610660565b915061075683610660565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561078b5761078a610711565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006107d082610660565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561080357610802610711565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b600061085860008361083d565b915061086382610848565b600082019050919050565b60006108798261084b565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b60006108b9600b83610694565b91506108c482610883565b602082019050919050565b600060208201905081810360008301526108e8816108ac565b9050919050565b60006108fa82610660565b915061090583610660565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561093e5761093d610711565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061098382610660565b915061098e83610660565b92508261099e5761099d610949565b5b828204905092915050565b600080fd5b600069ffffffffffffffffffff82169050919050565b6109cd816109ae565b81146109d857600080fd5b50565b6000815190506109ea816109c4565b92915050565b6000819050919050565b610a03816109f0565b8114610a0e57600080fd5b50565b600081519050610a20816109fa565b92915050565b610a2f81610660565b8114610a3a57600080fd5b50565b600081519050610a4c81610a26565b92915050565b600080600080600060a08688031215610a6e57610a6d6109a9565b5b6000610a7c888289016109db565b9550506020610a8d88828901610a11565b9450506040610a9e88828901610a3d565b9350506060610aaf88828901610a3d565b9250506080610ac0888289016109db565b9150509295509295909350565b6000610ad8826109f0565b9150610ae3836109f0565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b2257610b21610711565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b5f57610b5e610711565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b9c57610b9b610711565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610bd957610bd8610711565b5b82820290509291505056fea264697066735822122080eeecdf664c1fff56c233a26743daf6590b3f2498bba271176aeab7641bc99764736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100435760003560e01c80633ccfd60b1461005c5780638da5cb5b14610073578063b60d42881461009e578063dc992aa0146100a857610052565b36610052576100506100d3565b005b61005a6100d3565b005b34801561006857600080fd5b5061007161020c565b005b34801561007f57600080fd5b5061008861044e565b6040516100959190610645565b60405180910390f35b6100a66100d3565b005b3480156100b457600080fd5b506100bd610474565b6040516100ca9190610679565b60405180910390f35b6802b5e3af16b1880000610112600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461048190919063ffffffff16565b11610152576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610149906106f1565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102039190610740565b92505081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610293576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561033e576000600182815481106102b9576102b8610796565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610336906107c5565b915050610296565b50600067ffffffffffffffff81111561035a5761035961080e565b5b6040519080825280602002602001820160405280156103885781602001602082028036833780820191505090505b506001908051906020019061039e92919061055d565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103c59061086e565b60006040518083038185875af1925050503d8060008114610402576040519150601f19603f3d011682016040523d82523d6000602084013e610407565b606091505b505090508061044b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610442906108cf565b60405180910390fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b60008061048d836104bd565b90506000670de0b6b3a764000085836104a691906108ef565b6104b09190610978565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561050657600080fd5b505afa15801561051a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053e9190610a52565b5050509150506402540be400816105559190610acd565b915050919050565b8280548282559060005260206000209081019282156105d6579160200282015b828111156105d55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061057d565b5b5090506105e391906105e7565b5090565b5b808211156106005760008160009055506001016105e8565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061062f82610604565b9050919050565b61063f81610624565b82525050565b600060208201905061065a6000830184610636565b92915050565b6000819050919050565b61067381610660565b82525050565b600060208201905061068e600083018461066a565b92915050565b600082825260208201905092915050565b7f446964206e6f742073656e6420656e6f75676800000000000000000000000000600082015250565b60006106db601383610694565b91506106e6826106a5565b602082019050919050565b6000602082019050818103600083015261070a816106ce565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061074b82610660565b915061075683610660565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561078b5761078a610711565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006107d082610660565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561080357610802610711565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b600061085860008361083d565b915061086382610848565b600082019050919050565b60006108798261084b565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b60006108b9600b83610694565b91506108c482610883565b602082019050919050565b600060208201905081810360008301526108e8816108ac565b9050919050565b60006108fa82610660565b915061090583610660565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561093e5761093d610711565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061098382610660565b915061098e83610660565b92508261099e5761099d610949565b5b828204905092915050565b600080fd5b600069ffffffffffffffffffff82169050919050565b6109cd816109ae565b81146109d857600080fd5b50565b6000815190506109ea816109c4565b92915050565b6000819050919050565b610a03816109f0565b8114610a0e57600080fd5b50565b600081519050610a20816109fa565b92915050565b610a2f81610660565b8114610a3a57600080fd5b50565b600081519050610a4c81610a26565b92915050565b600080600080600060a08688031215610a6e57610a6d6109a9565b5b6000610a7c888289016109db565b9550506020610a8d88828901610a11565b9450506040610a9e88828901610a3d565b9350506060610aaf88828901610a3d565b9250506080610ac0888289016109db565b9150509295509295909350565b6000610ad8826109f0565b9150610ae3836109f0565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b2257610b21610711565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b5f57610b5e610711565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b9c57610b9b610711565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610bd957610bd8610711565b5b82820290509291505056fea264697066735822122080eeecdf664c1fff56c233a26743daf6590b3f2498bba271176aeab7641bc99764736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToDonation",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeedValue",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}